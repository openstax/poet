{
  "name": "editor",
  "version": "0.0.0-dev",
  "publisher": "openstax",
  "icon": "logo-128x128.png",
  "displayName": "POET",
  "license": "LICENSE",
  "description": "An editor for OpenStax-organized books.",
  "author": "phil@openstax.org",
  "repository": {
    "url": "https://github.com/openstax/pro-editing-tool/"
  },
  "engines": {
    "vscode": "^1.39.0"
  },
  "categories": [
    "Formatters",
    "Linters",
    "Visualization"
  ],
  "main": "./client/dist/client/src/extension.js",
  "scripts": {
    "clean": "rimraf *.vsix ./coverage/ ./.nyc_output/ ./client/dist/ ./client/out/ ./server/dist/ ./server/out/",
    "cypress:open": "cypress open",
    "package": "vsce package",
    "build:ts": "NODE_ENV=test babel --config-file $(pwd)/.babelrc --source-maps inline --extensions '.js,.jsx,.ts,.tsx' client/src/ -d client/out/",
    "prebuild:webpack": "cp ./client/src/webview-js/cnxml-preview/*.less ./client/out/webview-js/cnxml-preview",
    "build:webpack": "webpack --stats=minimal --mode ${NODE_ENV:-development} --config ./client/webpack.config.js --config ./server/webpack.config.js",
    "build": "npm run build:ts && npm run build:webpack",
    "build:production": "NODE_ENV=production npm run build && npm run package",
    "watch:webpack": "npm run build:webpack -- --watch",
    "watch:ts": "npm run build:ts -- -watch",
    "lint": "eslint . --ext ts,js,jsx,tsx,json",
    "lint:fix": "npm run lint -- --fix",
    "pretest:client": "./scripts/pretest.bash",
    "test:client": "node --unhandled-rejections=strict ./client/out/test/runTest.js",
    "test:cypress": "cypress run --quiet --config-file ./cypress.json",
    "test:unit": "jest --coverage --coverageDirectory ./.nyc_output/",
    "test:unit:watch": "npm run test:unit -- --watch --updateSnapshot",
    "posttest:unit": "mv ./.nyc_output/coverage-final.json ./.nyc_output/coverage-jest.json",
    "pretest": "npm run clean && npm run build",
    "test:only": "npm run test:unit && npm run test:client && npm run test:cypress",
    "test": "npm run test:only",
    "posttest": "nyc merge ./.nyc_output/ ./.nyc_output/coverage-final.json && nyc report --reporter=lcov --reporter=text --reporter=html",
    "postinstall": "cd ./client/ && npm install && cd ../server/ && npm install"
  },
  "nyc": {
    "sourceMap": true
  },
  "activationEvents": [
    "onLanguage:xml",
    "onCommand:openstax.showPreviewToSide",
    "onCommand:openstax.showTocEditor",
    "onCommand:openstax.showImageManager",
    "onCommand:openstax.pushContent",
    "onCommand:openstax.tagContent",
    "onView:tocTrees",
    "onCommand:openstax.validateContent"
  ],
  "contributes": {
    "commands": [
      {
        "command": "openstax.showPreviewToSide",
        "title": "Show Preview/Visual Editor",
        "category": "Openstax",
        "icon": "$(preview)"
      },
      {
        "command": "openstax.showTocEditor",
        "title": "Show ToC Editor",
        "category": "Openstax"
      },
      {
        "command": "openstax.pushContent",
        "title": "Push Content",
        "category": "Openstax"
      },
      {
        "command": "openstax.tagContent",
        "title": "Build in CORGI",
        "category": "Openstax"
      },
      {
        "command": "openstax.toggleTocTreesFiltering",
        "title": "Toggle ToC Filtering",
        "category": "Openstax",
        "icon": "$(filter)"
      },
      {
        "command": "openstax.validateContent",
        "title": "Validate Content",
        "category": "Openstax"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "openstax",
          "title": "Openstax",
          "icon": "openstax-logo.svg"
        }
      ]
    },
    "views": {
      "openstax": [
        {
          "id": "openstax-controls",
          "name": "Controls"
        },
        {
          "id": "tocTrees",
          "name": "ToC Trees"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "openstax-controls",
        "contents": "[Open ToC Editor](command:openstax.showTocEditor)\n[Push Content](command:openstax.pushContent)\n[Build in CORGI](command:openstax.tagContent)\n[Validate Content](command:openstax.validateContent)"
      }
    ],
    "menus": {
      "editor/title": [
        {
          "command": "openstax.showPreviewToSide",
          "when": "editorLangId == xml && !notebookEditorFocused",
          "group": "navigation"
        }
      ],
      "explorer/context": [
        {
          "command": "openstax.showPreviewToSide",
          "when": "editorLangId == xml",
          "group": "navigation"
        }
      ],
      "editor/title/context": [
        {
          "command": "openstax.showPreviewToSide",
          "when": "editorLangId == xml",
          "group": "1_open"
        }
      ],
      "commandPalette": [
        {
          "command": "openstax.showPreviewToSide",
          "when": "editorLangId == xml && !notebookEditorFocused",
          "group": "navigation"
        }
      ],
      "view/title": [
        {
          "command": "openstax.toggleTocTreesFiltering",
          "when": "view == tocTrees",
          "group": "navigation"
        }
      ]
    },
    "keybindings": [
      {
        "command": "openstax.showPreviewToSide",
        "key": "shift+ctrl+v",
        "mac": "shift+cmd+v",
        "when": "editorLangId == xml && !notebookEditorFocused"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "CNXML extension configuration",
      "properties": {
        "languageServerCnxml.trace.server": {
          "scope": "window",
          "type": "string",
          "enum": [
            "off",
            "messages",
            "verbose"
          ],
          "default": "off",
          "description": "Traces the communication between VS Code and the language server."
        }
      }
    }
  },
  "extensionDependencies": [
    "redhat.vscode-xml",
    "vscode.git"
  ],
  "devDependencies": {
    "@babel/cli": "^7.17.0",
    "@babel/plugin-transform-react-jsx": "^7.16.7",
    "@babel/plugin-transform-runtime": "^7.17.10",
    "@babel/preset-typescript": "^7.16.7",
    "@cypress/code-coverage": "^3.9.12",
    "@cypress/snapshot": "^2.1.7",
    "@fluffy-spoon/substitute": "^1.208.0",
    "@types/chai": "^4.3.0",
    "@types/fs-extra": "^9.0.13",
    "@types/mocha": "^9.1.0",
    "@types/mock-fs": "^4.13.1",
    "@types/sinon": "^10.0.11",
    "@typescript-eslint/eslint-plugin": "^4.33.0",
    "babel-loader": "^8.2.3",
    "babel-plugin-istanbul": "^6.1.1",
    "copy-webpack-plugin": "^10.2.4",
    "css-loader": "^6.6.0",
    "cypress": "^9.4.1",
    "eslint": "^7.32.0",
    "eslint-config-standard-with-typescript": "^21.0.1",
    "eslint-plugin-import": "^2.25.4",
    "eslint-plugin-json-format": "^2.0.1",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-promise": "^5.2.0",
    "expect": "^27.5.1",
    "fs-extra": "^10.0.0",
    "jest": "^27.5.1",
    "less": "^4.1.2",
    "less-loader": "^10.2.0",
    "mock-fs": "^5.1.2",
    "node-loader": "^2.0.0",
    "nyc": "^15.1.0",
    "sinon": "^13.0.1",
    "source-map-support": "^0.5.21",
    "style-loader": "^3.3.1",
    "ts-jest": "^27.1.3",
    "ts-loader": "^9.2.6",
    "ts-mockito": "^2.6.1",
    "typescript": "^4.5.5",
    "vsce": "^2.6.7",
    "vscode-languageclient": "^7.0.0",
    "vscode-languageserver": "^7.0.0",
    "webpack": "^5.68.0",
    "webpack-cli": "^4.9.2"
  },
  "dependencies": {
    "@babel/runtime": "^7.17.9"
  }
}
